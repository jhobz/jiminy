import { app, BrowserWindow, ipcMain } from 'electron'
import { authorize as authorizeGoogleSheets, getRouteData, getTimingData } from './gsheets'
import { OAuth2Client } from 'google-auth-library'
// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string

// Handle creating/removing shortcuts on Windows when installing/uninstalling.
if (require('electron-squirrel-startup')) {
  app.quit()
}

let GSheetsOAuth: OAuth2Client
let mainWindow: BrowserWindow

const createWindow = () => {
  // Create the browser window.
  mainWindow = new BrowserWindow({
    width: 1920,
    height: 1080,
    webPreferences: {
      preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
      contextIsolation: true,
    },
  })

  // and load the index.html of the app.
  mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY)

  // Open the DevTools.
  mainWindow.webContents.openDevTools()

  mainWindow.webContents.on('did-finish-load', () => {
    authorizeGoogleSheets().then((client: OAuth2Client) => {
      GSheetsOAuth = client
      mainWindow.webContents.send('GSheetsAuth', client)
    }).catch(() => {
      mainWindow.webContents.send('GSheetsAuth', null)
    })
  })
}

// This method will be called when Electron has finished
// initialization and is ready to create browser windows.
// Some APIs can only be used after this event occurs.
app.on('ready', createWindow)

// Quit when all windows are closed, except on macOS. There, it's common
// for applications and their menu bar to stay active until the user quits
// explicitly with Cmd + Q.
app.on('window-all-closed', () => {
  if (process.platform !== 'darwin') {
    app.quit()
  }
})

app.on('activate', () => {
  // On OS X it's common to re-create a window in the app when the
  // dock icon is clicked and there are no other windows open.
  if (BrowserWindow.getAllWindows().length === 0) {
    createWindow()
  }
})

// In this file you can include the rest of your app's specific main process
// code. You can also put them in separate files and import them here.

ipcMain.on('getTimingData', () => {
  getTimingData(GSheetsOAuth).then((data: string[][]) => {
    mainWindow.webContents.send('getTimingData', data) 
  })
})

ipcMain.on('getRouteData', () => {
  getRouteData(GSheetsOAuth).then((data: string[][]) => {
    mainWindow.webContents.send('getRouteData', data) 
  })
})